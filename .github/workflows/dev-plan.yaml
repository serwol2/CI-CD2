name: 'plan DEV'

on:
  #pull_request:
  push:
    branches:
      - main
    # path:
    #   - terraform/**

env:
  AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY_ID}}   


jobs:
  make_stru_test:
    name: running terraform plan and python lint
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: terraform
  
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          aws-access-key-id: ${{env.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{env.AWS_SECRET_KEY}}
          aws-region: "us-east-1"

      - name: 'Use terraform 1.1.7'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: 'Terraform fmt'
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ${{ env.WORKING_DIRECTORY }}    

      - name: 'Terraform init'
        id: init
        run: terraform init 
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: 'Terraform plan'
        id: plan
        run: terraform plan -no-color
        working-directory: ${{ env.WORKING_DIRECTORY }}

# python lint
    python_lint:
      name: "Python Code Quality and Lint"
      description: "Supports Pylint, pycodestyle, Flake8, black, mypy and isort"
      inputs:
        python-root-list:
        description: "A list of all paths to test"
        required: false
        default: "."
      use-pylint:
        description: "Use Pylint"
        required: false
        default: true
      use-pycodestyle:
        description: "Use pycodestyle"
        required: false
        default: true
      use-flake8:
        description: "Use Flake8"
        required: false
        default: true
      use-black:
        description: "Use Black"
        required: false
        default: true
      use-mypy:
        description: "Use mypy"
        required: false
        default: true
      use-isort:
        description: "Use isort"
        required: false
        default: true
      extra-pylint-options:
        description: "Extra options: pylint $(extra-pylint-options) $(python-root-list)"
        required: false
        default: ""
      extra-pycodestyle-options:
        description: "Extra options: pycodestyle $(extra-pycodestyle-options) $(python-root-list)"
        required: false
        default: ""
      extra-flake8-options:
        description: "Extra options: flake8 $(extra-flake8-options) $(python-root-list)"
        required: false
        default: ""
      extra-black-options:
        description: "Extra options: black --check $(extra-black-options) $(python-root-list)"
        required: false
        default: ""
      extra-mypy-options:
        description: "Extra options: mypy $(extra-mypy-options) $(python-root-list)"
        required: false
        default: ""
      extra-isort-options:
        description: "Extra options: isort -rc $(extra-isort-options) $(python-root-list) -c --diff "
        required: false
        default: ""

    runs:
    using: "docker"
    image: "Dockerfile"
    args:
        - ${{ inputs.python-root-list }}
        - ${{ inputs.use-pylint }}
        - ${{ inputs.use-pycodestyle }}
        - ${{ inputs.use-flake8 }}
        - ${{ inputs.use-black }}
        - ${{ inputs.use-mypy }}
        - ${{ inputs.use-isort }}
        - ${{ inputs.extra-pylint-options }}
        - ${{ inputs.extra-pycodestyle-options }}
        - ${{ inputs.extra-flake8-options }}
        - ${{ inputs.extra-black-options }}
        - ${{ inputs.extra-mypy-options }}
        - ${{ inputs.extra-isort-options }}
    branding:
    icon: "terminal"
    color: "white"